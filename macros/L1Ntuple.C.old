#define l1ntuple_cxx
#include "L1Ntuple.h"

double L1Ntuple::deltaPhi(double phi1, double phi2) {

  if (phi1<0) phi1+=2.*TMath::Pi();
  if (phi2<0) phi2+=2.*TMath::Pi();

  double result = phi1 - phi2;
  if(fabs(result) > 9999) return result;
  while (result > TMath::Pi()) result -= 2*TMath::Pi();
  while (result <= -TMath::Pi()) result += 2*TMath::Pi();
  return result;
}

double L1Ntuple::deltaR(double eta1, double phi1, double eta2, double phi2) {
  double deta = eta1 - eta2;
  double dphi = deltaPhi(phi1, phi2);
  return sqrt(deta*deta + dphi*dphi);
}

//double L1Ntuple::matchTPs(double etaj, double phij, 

double L1Ntuple::etaVal(int ieta) {

  double ietaBins=58.;
  double ietaBinsHF=3.;

  double etavl;

  if (abs(ieta)>=29) { // HF Jet
    etavl=(double)ieta*(0.2/ietaBinsHF);
  } else { // central Jet
    etavl=(double)ieta*(0.6/ietaBins);
  }

  return etavl;

}

double L1Ntuple::phiVal(int iphi) {

  double phiBins=72.;

  double phivl;
  phivl=double(iphi)*(2.*TMath::Pi()/phiBins);

  return phivl;

}

// double matchUpgradedJet(double etaj, double phij) {

//   // New PMTs DetId --> convert to eta/phi of L1jet
//   double dR=-999.;
//   int ieta;

//   for (Int_t j=0; j<caloTP_->nHCALTP; j++) {
    
//     ieta=caloTP_->hcalTPieta[j];

//   // If L1Jets upon the upgraded PMTs.
//     if (caloTP_->hcalTPCaliphi[j]==43) {
//       if (ieta==29 || ieta==30 || ieta==31 || ieta==32 || ieta==33 || ieta==34 || ieta==35 ||
// 	  ieta==36 || ieta==37 || ieta==38 || ieta==39 || ieta==40 || ieta==41) {
	
// 	etaU=etaVal(caloTP_->hcalTPieta[j]);
// 	phiU=phiVal(caloTP_->hcalTPCaliphi[j]);
	
// 	dR=deltaR(etaj, phij, etaU, phiU);
//       }
//     }
//   }

//   return dR;

// }



void L1Ntuple::Test()
{ 

  if (fChain == 0)  return;
 
  Long64_t nentries = fChain->GetEntriesFast();
  Long64_t nbytes = 0, nb = 0;
  unsigned int nevents =0;

  std::cout << nentries << " events to process"<<std::endl;
  for (Long64_t jentry=0; jentry<nentries;jentry++)
  {
    Long64_t ientry = LoadTree(jentry);
    if (ientry < 0) break;
    
    nb = fChain->GetEntry(jentry);   nbytes += nb;
    
    //fChain->GetEvent(jentry);
  
    nevents++;
    if (nevents<9)  //eight first events
      { 
    std::cout << "--------------------- Event "<<jentry<<" ---------------------"<<std::endl;

    //event_
    std::cout << "L1Tree         : event_->run = "<<event_->run<<std::endl;

    }
  }
   
}

void L1Ntuple::prefiringHCAL()
{ 

  if (fChain == 0)  return;
 
  Long64_t nentries = fChain->GetEntriesFast();
  Long64_t nbytes = 0, nb = 0;
  //unsigned int nevents =0;

  std::cout << nentries << " events to process"<<std::endl;

  TFile *total=new TFile("total.root","RECREATE");
  TDirectory *dir = total->mkdir("l1ExtraJets","Histograms for l1Extra Jet candidates; timing studies");

  // Central Jets
  TH1D *ptJet_early=new TH1D("ptJet_early","",200,0.,400.);
  TH1D *ptJet_central=new TH1D("ptJet_central","",200,0.,400.);
  TH1D *ptJet_late=new TH1D("ptJet_late","",200,0.,400.);

  TH1D *etaJet_early=new TH1D("etaJet_early","",30,-3.,3.);
  TH1D *etaJet_central=new TH1D("etaJet_central","",30,-3.,3.);
  TH1D *etaJet_late=new TH1D("etaJet_late","",30,-3.,3.);

  TH1D *phiJet_early=new TH1D("phiJet_early","",30,-TMath::Pi(),TMath::Pi());
  TH1D *phiJet_central=new TH1D("phiJet_central","",30,-TMath::Pi(),TMath::Pi());
  TH1D *phiJet_late=new TH1D("phiJet_late","",30,-TMath::Pi(),TMath::Pi());

  // Debugging plots
  TH1D *etaJet_early_H=new TH1D("etaJet_early_H","",30,-3.,3.);
  TH1D *etaJet_central_H=new TH1D("etaJet_central_H","",30,-3.,3.);
  TH1D *phiJet_early_H=new TH1D("phiJet_early_H","",30,-TMath::Pi(),TMath::Pi());
  TH1D *phiJet_central_H=new TH1D("phiJet_central_H","",30,-TMath::Pi(),TMath::Pi());

  // HCAL TPs
  TH1D *ietaTP_H=new TH1D("ietaTP_H","",69,-34.5,34.5);
  TH1D *iphiTP_H=new TH1D("iphiTP_H","",77,-0.5,76.5);
  TH2D *ietaTP_iphiTP_H=new TH2D("ietaTP_iphiTP_H","",69,-34.5,34.5,77,-0.5,76.5);
  TH2D *ietaTP_iphiTP_H_2=new TH2D("ietaTP_iphiTP_H_2","",69,-34.5,34.5,77,-0.5,76.5);
  TH3D *ietaTP_iphiTP_etTP_H=new TH3D("ietaTP_iphiTP_etTP_H","",69,-34.5,34.5,77,-0.5,76.5,500,0.,50.);

  TH1D *etTP_H=new TH1D("etTP_H","",500,0.,50.);
  TH1D *compEtTP_H=new TH1D("compEtTP_H","",1500,0.,150.);

  TH1D *ietaTP_Hs=new TH1D("ietaTP_Hs","",69,-34.5,34.5);
  TH1D *iphiTP_Hs=new TH1D("iphiTP_Hs","",77,-0.5,76.5);
  TH2D *ietaTP_iphiTP_Hs=new TH2D("ietaTP_iphiTP_Hs","",69,-34.5,34.5,77,-0.5,76.5);
  TH2D *ietaTP_iphiTP_Hs_2=new TH2D("ietaTP_iphiTP_Hs_2","",69,-34.5,34.5,77,-0.5,76.5);
  TH3D *ietaTP_iphiTP_etTP_Hs=new TH3D("ietaTP_iphiTP_etTP_Hs","",69,-34.5,34.5,77,-0.5,76.5,500,0.,50.);

  TH1D *etTP_Hs=new TH1D("etTP_Hs","",500,0.,50.);
  TH1D *compEtTP_Hs=new TH1D("compEtTP_Hs","",1500,0.,150.);


  TH1D *ietaTP=new TH1D("ietaTP","",69,-34.5,34.5);
  TH1D *iphiTP=new TH1D("iphiTP","",77,-0.5,76.5);
  TH2D *ietaTP_iphiTP=new TH2D("ietaTP_iphiTP","",69,-34.5,34.5,77,-0.5,76.5);
  TH2D *ietaTP_iphiTP_2=new TH2D("ietaTP_iphiTP_2","",69,-34.5,34.5,77,-0.5,76.5);
  TH3D *ietaTP_iphiTP_etTP=new TH3D("ietaTP_iphiTP_etTP","",69,-34.5,34.5,77,-0.5,76.5,500,0.,50.);

  TH1D *etTP=new TH1D("etTP","",500,0.,50.);
  TH1D *compEtTP=new TH1D("compEtTP","",1500,0.,150.);

  // HFJets
  TH1D *ptJetHF_early=new TH1D("ptJetHF_early","",200,0.,400.);
  TH1D *ptJetHF_central=new TH1D("ptJetHF_central","",200,0.,400.);
  TH1D *ptJetHF_late=new TH1D("ptJetHF_late","",200,0.,400.);

  TH1D *etaJetHF_early=new TH1D("etaJetHF_early","",50,-5.,5.);
  TH1D *etaJetHF_central=new TH1D("etaJetHF_central","",50,-5.,5.);
  TH1D *etaJetHF_late=new TH1D("etaJetHF_late","",50,-5.,5.);

  TH1D *phiJetHF_early=new TH1D("phiJetHF_early","",30,-TMath::Pi(),TMath::Pi());
  TH1D *phiJetHF_central=new TH1D("phiJetHF_central","",30,-TMath::Pi(),TMath::Pi());
  TH1D *phiJetHF_late=new TH1D("phiJetHF_late","",30,-TMath::Pi(),TMath::Pi());

  // Debugging plots
  TH1D *etaJetHF_early_H=new TH1D("etaJetHF_early_H","",50,-5.,5.);
  TH1D *etaJetHF_central_H=new TH1D("etaJetHF_central_H","",50,-5.,5.);
  TH1D *phiJetHF_early_H=new TH1D("phiJetHF_early_H","",30,-TMath::Pi(),TMath::Pi());
  TH1D *phiJetHF_central_H=new TH1D("phiJetHF_central_H","",30,-TMath::Pi(),TMath::Pi());

  // HCAL TPs
  TH1D *ietaTP_hf_H=new TH1D("ietaTP_hf_H","",69,-34.5,34.5);
  TH1D *iphiTP_hf_H=new TH1D("iphiTP_hf_H","",77,-0.5,76.5);
  TH2D *ietaTP_iphiTP_hf_H=new TH2D("ietaTP_iphiTP_hf_H","",69,-34.5,34.5,77,-0.5,76.5);
  TH2D *ietaTP_iphiTP_hf_H_2=new TH2D("ietaTP_iphiTP_hf_H_2","",69,-34.5,34.5,77,-0.5,76.5);
  TH3D *ietaTP_iphiTP_etTP_hf_H=new TH3D("ietaTP_iphiTP_etTP_hf_H","",69,-34.5,34.5,77,-0.5,76.5,500,0.,50.);

  TH1D *etTP_hf_H=new TH1D("etTP_hf_H","",500,0.,50.);
  TH1D *compEtTP_hf_H=new TH1D("compEtTP_hf_H","",1500,0.,150.);

  TH1D *ietaTP_hf_Hs=new TH1D("ietaTP_hf_Hs","",69,-34.5,34.5);
  TH1D *iphiTP_hf_Hs=new TH1D("iphiTP_hf_Hs","",77,-0.5,76.5);
  TH2D *ietaTP_iphiTP_hf_Hs=new TH2D("ietaTP_iphiTP_hf_Hs","",69,-34.5,34.5,77,-0.5,76.5);
  TH2D *ietaTP_iphiTP_hf_Hs_2=new TH2D("ietaTP_iphiTP_hf_Hs_2","",69,-34.5,34.5,77,-0.5,76.5);
  TH3D *ietaTP_iphiTP_etTP_hf_Hs=new TH3D("ietaTP_iphiTP_etTP_hf_Hs","",69,-34.5,34.5,77,-0.5,76.5,500,0.,50.);

  TH1D *etTP_hf_Hs=new TH1D("etTP_hf_Hs","",500,0.,50.);
  TH1D *compEtTP_hf_Hs=new TH1D("compEtTP_hf_Hs","",1500,0.,150.);

  TH1D *h_matchDR_early=new TH1D("h_matchDR_early","",500,0.,10.);
  TH1D *h_matchDR_central=new TH1D("h_matchDR_central","",500,0.,10.);
  TH1D *h_matchDR_early_H=new TH1D("h_matchDR_early_H","",500,0.,10.);
  TH1D *h_matchDR_central_H=new TH1D("h_matchDR_central_H","",500,0.,10.);


  for (Long64_t jentry=0; jentry<nentries;jentry++)
  {
    Long64_t ientry = LoadTree(jentry);
    if (ientry < 0) break;
    
    nb = fChain->GetEntry(jentry);   nbytes += nb;

    if(!(ientry%100000) && ientry) 
      std::cout << "processing event " << ientry << "\r" << std::endl;

    //    std::cout << "" << std::endl;
    Int_t ie,ic,il;
    ie=ic=il=0;

    Int_t ie1,ic1,il1;
    ie1=ic1=il1=-1;

    // Write your code here
    
    // Loop over central Jets in l1extra
    //    std::cout << "nCenJEts = " << l1extra_->nCenJets << std::endl;

    for (Int_t i=0; i<l1extra_->nCenJets; i++) {
      // eaarly candidates 
      if (l1extra_->cenJetBx[i]==-1 ) {
	ie++; if(ie>1) continue;
	//	std::cout << "nCenJEts (-1)= " << l1extra_->cenJetEt[i] << std::endl;
	ie1=i;
	/*
	ptJet_early->Fill(l1extra_->cenJetEt[i]);
	etaJet_early->Fill(fabs(l1extra_->cenJetEta[i]));
	phiJet_early->Fill(l1extra_->cenJetPhi[i]);
	*/
      }
      // central cadndidates
      if (l1extra_->cenJetBx[i]==0) {
	ic++; if (ic>1) continue;
	//	std::cout << "nCenJEts (0)= " << l1extra_->cenJetEt[i] << std::endl;
	ic1=i;
	/*
        ptJet_central->Fill(l1extra_->cenJetEt[i]);
        etaJet_central->Fill(fabs(l1extra_->cenJetEta[i]));
        phiJet_central->Fill(l1extra_->cenJetPhi[i]);
	*/
      }
      // eaarly candidates
      if (l1extra_->cenJetBx[i]==1 ) {
	il++; if (il>1) continue;
	//	std::cout << "nCenJEts (+1)= " << l1extra_->cenJetEt[i] << std::endl;
	il1=i;
	/*
        ptJet_late->Fill(l1extra_->cenJetEt[i]);
        etaJet_late->Fill(fabs(l1extra_->cenJetEta[i]));
        phiJet_late->Fill(l1extra_->cenJetPhi[i]);
	*/
      }
    }

    // Run Analysis for L1Jets only that fall into the new PMTs detIds.
    double dRmax=1.; // Max DR between L1jet and HCAL TP.

    Double_t isUpgraded=-1.;

    // For debuggig
    Double_t idH_early, idH_central;
    idH_early=idH_central=-1.;

    Double_t etaj_early, phij_early;
    Double_t etaj_central, phij_central;

      // Loop over tau Jets in l1extra
    ie=ic=il=0;
    // std::cout << "nTauJEts = " << l1extra_->nTauJets << std::endl;

    for (Int_t i=0; i<l1extra_->nTauJets; i++) {
	// eaarly candidates
      if (l1extra_->tauJetBx[i]==-1 ) {
	ie++; if (ie>1) continue;
	if (ie1>=0) {
	  if (l1extra_->tauJetEt[i]>=l1extra_->cenJetEt[ie1]) {
	    ptJet_early->Fill(l1extra_->tauJetEt[i]);
	    etaJet_early->Fill(l1extra_->tauJetEta[i]);
	    phiJet_early->Fill(l1extra_->tauJetPhi[i]);

	    etaj_early=l1extra_->tauJetEta[i];
	    phij_early=l1extra_->tauJetPhi[i];
	    
	    // Debugging
	    if (l1extra_->tauJetEt[i]>=240.) {
	      etaJet_early_H->Fill(l1extra_->tauJetEta[i]);
	      phiJet_early_H->Fill(l1extra_->tauJetPhi[i]);
	      idH_early=999.;
	    }

	  } else {
	    ptJet_early->Fill(l1extra_->cenJetEt[ie1]);
	    etaJet_early->Fill(l1extra_->cenJetEta[ie1]);
	    phiJet_early->Fill(l1extra_->cenJetPhi[ie1]);

	    etaj_early=l1extra_->cenJetEta[ie1];
	    phij_early=l1extra_->cenJetPhi[ie1];

	    if (l1extra_->cenJetEt[ie1]>=240.) {
	      etaJet_early_H->Fill(l1extra_->cenJetEta[ie1]);
	      phiJet_early_H->Fill(l1extra_->cenJetPhi[ie1]);
	      idH_early=999.;
	    }

	  }
	} else {
	  ptJet_early->Fill(l1extra_->tauJetEt[i]);
	  etaJet_early->Fill(l1extra_->tauJetEta[i]);
	  phiJet_early->Fill(l1extra_->tauJetPhi[i]);
	  
	  etaj_early=l1extra_->tauJetEta[i];
	  phij_early=l1extra_->tauJetPhi[i];

	  if (l1extra_->tauJetEt[i]>=240.) {
	    etaJet_early_H->Fill(l1extra_->tauJetEta[i]);
	    phiJet_early_H->Fill(l1extra_->tauJetPhi[i]);
	    idH_early=999.;
	  }

	}
      }
      // central cadndidates
      if (l1extra_->tauJetBx[i]==0) {
	ic++; if (ic>1) continue;
	if (ic1>=0) {
	  if (l1extra_->tauJetEt[i]>=l1extra_->cenJetEt[ic1]) {
	    ptJet_central->Fill(l1extra_->tauJetEt[i]);
	    etaJet_central->Fill(l1extra_->tauJetEta[i]);
	    phiJet_central->Fill(l1extra_->tauJetPhi[i]);

	    etaj_central=l1extra_->tauJetEta[i];
	    phij_central=l1extra_->tauJetPhi[i];

	    if (l1extra_->tauJetEt[i]>=240.) {
              etaJet_central_H->Fill(l1extra_->tauJetEta[i]);
              phiJet_central_H->Fill(l1extra_->tauJetPhi[i]);
	      idH_central=999.;
            }


	  } else {
	    ptJet_central->Fill(l1extra_->cenJetEt[ic1]);
	    etaJet_central->Fill(l1extra_->cenJetEta[ic1]);
	    phiJet_central->Fill(l1extra_->cenJetPhi[ic1]);

	    etaj_central=l1extra_->cenJetEta[ic1];
	    phij_central=l1extra_->cenJetPhi[ic1];

	    if (l1extra_->cenJetEt[ie1]>=240.) {
              etaJet_central_H->Fill(l1extra_->cenJetEta[ie1]);
              phiJet_central_H->Fill(l1extra_->cenJetPhi[ie1]);
	      idH_central=999.;
            }


	  }
	} else {
	  ptJet_central->Fill(l1extra_->tauJetEt[i]);
	  etaJet_central->Fill(l1extra_->tauJetEta[i]);
	  phiJet_central->Fill(l1extra_->tauJetPhi[i]);

	  etaj_central=l1extra_->tauJetEta[i];
	  phij_central=l1extra_->tauJetPhi[i];

	  if (l1extra_->tauJetEt[i]>=240.) {
	    etaJet_central_H->Fill(l1extra_->tauJetEta[i]);
	    phiJet_central_H->Fill(l1extra_->tauJetPhi[i]);
	    idH_central=999.;
	  }

	}
      }
      // late candidates
      if (l1extra_->tauJetBx[i]==1 ) {
	il++; if (il>1) continue;
	if (il1>=0) {
	  if (l1extra_->tauJetEt[i]>=l1extra_->cenJetEt[il1]) {
	    ptJet_late->Fill(l1extra_->tauJetEt[i]);
	    etaJet_late->Fill(l1extra_->tauJetEta[i]);
	    phiJet_late->Fill(l1extra_->tauJetPhi[i]);
	  } else {
	    ptJet_late->Fill(l1extra_->cenJetEt[il1]);
	    etaJet_late->Fill(l1extra_->cenJetEta[il1]);
	    phiJet_late->Fill(l1extra_->cenJetPhi[il1]);
	  }
	} else {
	  ptJet_late->Fill(l1extra_->tauJetEt[i]);
	  etaJet_late->Fill(l1extra_->tauJetEta[i]);
	  phiJet_late->Fill(l1extra_->tauJetPhi[i]);
	}
      }
   
    }

   //  double dRmax=1.;
    double matchDR_early, matchDR_central;

    // All TP info
    for (Int_t j=0; j<caloTP_->nHCALTP; j++) {

      // std::cout << "ieta = " << caloTP_->hcalTPieta[j] << " is eta = " << etaVal( caloTP_->hcalTPieta[j]) << std::endl;
      // std::cout << " iphi = " << caloTP_->hcalTPCaliphi[j] << " is phi = " << phiVal(caloTP_->hcalTPCaliphi[j]) <<  std::endl;
      matchDR_early=deltaR(etaj_early, phij_early, etaVal( caloTP_->hcalTPieta[j]),phiVal(caloTP_->hcalTPCaliphi[j]));
      matchDR_central=deltaR(etaj_central, phij_central, etaVal( caloTP_->hcalTPieta[j]),phiVal(caloTP_->hcalTPCaliphi[j]));

      h_matchDR_early->Fill(matchDR_early);
      h_matchDR_central->Fill(matchDR_central);

      if (matchDR_early>dRmax) continue;

      ietaTP->Fill(caloTP_->hcalTPieta[j]);
      iphiTP->Fill(caloTP_->hcalTPCaliphi[j]);
      ietaTP_iphiTP->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j]);
      ietaTP_iphiTP_2->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j],caloTP_->hcalTPet[j]);
      ietaTP_iphiTP_etTP->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j],caloTP_->hcalTPet[j]);

      etTP->Fill(caloTP_->hcalTPet[j]);
      compEtTP->Fill(caloTP_->hcalTPcompEt[j]);
    }


    // If L1Jet BX=-1 and ET>240
    if (idH_early>0) {
      if (idH_central>0) { // ET of central Jet is also >240
	// TP info
	for (Int_t j=0; j<caloTP_->nHCALTP; j++) {

	  matchDR_early=deltaR(etaj_early, phij_early, etaVal( caloTP_->hcalTPieta[j]),phiVal(caloTP_->hcalTPCaliphi[j]));
	  matchDR_central=deltaR(etaj_central, phij_central, etaVal( caloTP_->hcalTPieta[j]),phiVal(caloTP_->hcalTPCaliphi[j]));
	  
	  h_matchDR_early_H->Fill(matchDR_early);
	  h_matchDR_central_H->Fill(matchDR_central);

	  if (matchDR_early>dRmax) continue;

	  ietaTP_H->Fill(caloTP_->hcalTPieta[j]);
	  iphiTP_H->Fill(caloTP_->hcalTPCaliphi[j]);
	  ietaTP_iphiTP_H->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j]);
	  ietaTP_iphiTP_H_2->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j],caloTP_->hcalTPet[j]);
	  ietaTP_iphiTP_etTP_H->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j],caloTP_->hcalTPet[j]);
	  
	  etTP_H->Fill(caloTP_->hcalTPet[j]);
	  compEtTP_H->Fill(caloTP_->hcalTPcompEt[j]);
	}
      } else { // ET of central Jet is <240
	for (Int_t j=0; j<caloTP_->nHCALTP; j++) {

	  matchDR_early=deltaR(etaj_early, phij_early, etaVal( caloTP_->hcalTPieta[j]),phiVal(caloTP_->hcalTPCaliphi[j]));
	  matchDR_central=deltaR(etaj_central, phij_central, etaVal( caloTP_->hcalTPieta[j]),phiVal(caloTP_->hcalTPCaliphi[j]));
	  
	  h_matchDR_early_H->Fill(matchDR_early);
	  h_matchDR_central_H->Fill(matchDR_central);

	  if (matchDR_early>dRmax) continue;

	  ietaTP_Hs->Fill(caloTP_->hcalTPieta[j]);
	  iphiTP_Hs->Fill(caloTP_->hcalTPCaliphi[j]);
	  ietaTP_iphiTP_Hs->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j]);
	  ietaTP_iphiTP_Hs_2->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j],caloTP_->hcalTPet[j]);
	  ietaTP_iphiTP_etTP_Hs->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j],caloTP_->hcalTPet[j]);
	  
	  etTP_Hs->Fill(caloTP_->hcalTPet[j]);
	  compEtTP_Hs->Fill(caloTP_->hcalTPcompEt[j]);
	}
      }
      
    }
  
    // HFjets
    // For debuggig
    Double_t idHf_early, idHf_central;
    idHf_early=idHf_central=-1.;

    //    Int_t ie,ic,il;
    ie=ic=il=0;
    for (Int_t i=0; i<l1extra_->nFwdJets; i++) {
      // eaarly candidates
      if (l1extra_->fwdJetBx[i]==-1 ) {
	ie++; if (ie>1) continue;
        ptJetHF_early->Fill(l1extra_->fwdJetEt[i]);
        etaJetHF_early->Fill(l1extra_->fwdJetEta[i]);
        phiJetHF_early->Fill(l1extra_->fwdJetPhi[i]);

	
	etaj_early=l1extra_->fwdJetEta[i];
	phij_early=l1extra_->fwdJetPhi[i];

	if (l1extra_->fwdJetEt[i]>=240.) {
	  etaJetHF_early_H->Fill(l1extra_->fwdJetEta[i]);
	  phiJetHF_early_H->Fill(l1extra_->fwdJetPhi[i]);
	  idHf_early=999.;
	}

      }
      // fwdtral cadndidates
      if (l1extra_->fwdJetBx[i]==0) {
	ic++; if (ic>1) continue;
        ptJetHF_central->Fill(l1extra_->fwdJetEt[i]);
        etaJetHF_central->Fill(l1extra_->fwdJetEta[i]);
        phiJetHF_central->Fill(l1extra_->fwdJetPhi[i]);

	etaj_central=l1extra_->fwdJetEta[i];
	phij_central=l1extra_->fwdJetPhi[i];

	if (l1extra_->fwdJetEt[i]>=240.) {
          etaJetHF_central_H->Fill(l1extra_->fwdJetEta[i]);
          phiJetHF_central_H->Fill(l1extra_->fwdJetPhi[i]);
	  idHf_central=999.;
        }

      }
      // late candidates
      if (l1extra_->fwdJetBx[i]==1 ) {
	il++; if (il>1) continue;
        ptJetHF_late->Fill(l1extra_->fwdJetEt[i]);
        etaJetHF_late->Fill(l1extra_->fwdJetEta[i]);
        phiJetHF_late->Fill(l1extra_->fwdJetPhi[i]);
      }
    }

    if (idHf_early>0) {
      if (idHf_central>0) {
	// TP info
	for (Int_t j=0; j<caloTP_->nHCALTP; j++) {

	  matchDR_early=deltaR(etaj_early, phij_early, etaVal( caloTP_->hcalTPieta[j]),phiVal(caloTP_->hcalTPCaliphi[j]));
	  matchDR_central=deltaR(etaj_central, phij_central, etaVal( caloTP_->hcalTPieta[j]),phiVal(caloTP_->hcalTPCaliphi[j]));
	  
	  if (matchDR_early>dRmax) continue;

	  ietaTP_hf_H->Fill(caloTP_->hcalTPieta[j]);
	  iphiTP_hf_H->Fill(caloTP_->hcalTPCaliphi[j]);
	  ietaTP_iphiTP_hf_H->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j]);
	  ietaTP_iphiTP_hf_H_2->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j],caloTP_->hcalTPet[j]);
	  ietaTP_iphiTP_etTP_hf_H->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j],caloTP_->hcalTPet[j]);
	  
	  etTP_hf_H->Fill(caloTP_->hcalTPet[j]);
	  compEtTP_hf_H->Fill(caloTP_->hcalTPcompEt[j]);
	}
      } else {
	for (Int_t j=0; j<caloTP_->nHCALTP; j++) {

	  matchDR_early=deltaR(etaj_early, phij_early, etaVal( caloTP_->hcalTPieta[j]),phiVal(caloTP_->hcalTPCaliphi[j]));
	  matchDR_central=deltaR(etaj_central, phij_central, etaVal( caloTP_->hcalTPieta[j]),phiVal(caloTP_->hcalTPCaliphi[j]));
	  
	  if (matchDR_early>dRmax) continue;

	  ietaTP_hf_Hs->Fill(caloTP_->hcalTPieta[j]);
	  iphiTP_hf_Hs->Fill(caloTP_->hcalTPCaliphi[j]);
	  ietaTP_iphiTP_hf_Hs->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j]);
	  ietaTP_iphiTP_hf_Hs_2->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j],caloTP_->hcalTPet[j]);
	  ietaTP_iphiTP_etTP_hf_Hs->Fill(caloTP_->hcalTPieta[j],caloTP_->hcalTPCaliphi[j],caloTP_->hcalTPet[j]);
	  
	  etTP_hf_Hs->Fill(caloTP_->hcalTPet[j]);
	  compEtTP_hf_Hs->Fill(caloTP_->hcalTPcompEt[j]);
	  
	}
      }
    }

      
  } // End loop over all Events

  ptJet_early->Sumw2(); ptJet_early->SetDirectory(dir);
  ptJet_central->Sumw2(); ptJet_central->SetDirectory(dir);
  ptJet_late->Sumw2(); ptJet_late->SetDirectory(dir);
  
  etaJet_early->Sumw2(); etaJet_early->SetDirectory(dir);
  etaJet_central->Sumw2(); etaJet_central->SetDirectory(dir);
  etaJet_late->Sumw2(); etaJet_late->SetDirectory(dir);

  phiJet_early->Sumw2(); phiJet_early->SetDirectory(dir);
  phiJet_central->Sumw2(); phiJet_central->SetDirectory(dir);
  phiJet_late->Sumw2(); phiJet_late->SetDirectory(dir);

  etaJet_early_H->Sumw2(); etaJet_early_H->SetDirectory(dir);
  etaJet_central_H->Sumw2(); etaJet_central_H->SetDirectory(dir);
  phiJet_early_H->Sumw2(); phiJet_early_H->SetDirectory(dir);
  phiJet_central_H->Sumw2(); phiJet_central_H->SetDirectory(dir);


  // HF jets
  ptJetHF_early->Sumw2(); ptJetHF_early->SetDirectory(dir);
  ptJetHF_central->Sumw2(); ptJetHF_central->SetDirectory(dir);
  ptJetHF_late->Sumw2(); ptJetHF_late->SetDirectory(dir);

  etaJetHF_early->Sumw2(); etaJetHF_early->SetDirectory(dir);
  etaJetHF_central->Sumw2(); etaJetHF_central->SetDirectory(dir);
  etaJetHF_late->Sumw2(); etaJetHF_late->SetDirectory(dir);

  phiJetHF_early->Sumw2(); phiJetHF_early->SetDirectory(dir);
  phiJetHF_central->Sumw2(); phiJetHF_central->SetDirectory(dir);
  phiJetHF_late->Sumw2(); phiJetHF_late->SetDirectory(dir);
  
  etaJetHF_early_H->Sumw2(); etaJetHF_early_H->SetDirectory(dir);
  etaJetHF_central_H->Sumw2(); etaJetHF_central_H->SetDirectory(dir);
  phiJetHF_early_H->Sumw2(); phiJetHF_early_H->SetDirectory(dir);
  phiJetHF_central_H->Sumw2(); phiJetHF_central_H->SetDirectory(dir);

  // TP info
  ietaTP_H->Sumw2(); ietaTP_H->SetDirectory(dir);
  iphiTP_H->Sumw2(); iphiTP_H->SetDirectory(dir);
  ietaTP_iphiTP_H->Sumw2(); ietaTP_iphiTP_H->SetDirectory(dir);
  ietaTP_iphiTP_H_2->Sumw2(); ietaTP_iphiTP_H_2->SetDirectory(dir);
  ietaTP_iphiTP_etTP_H->Sumw2(); ietaTP_iphiTP_etTP_H->SetDirectory(dir);
  etTP_H->Sumw2(); etTP_H->SetDirectory(dir);
  compEtTP_H->Sumw2(); compEtTP_H->SetDirectory(dir);

  ietaTP_Hs->Sumw2(); ietaTP_Hs->SetDirectory(dir);
  iphiTP_Hs->Sumw2(); iphiTP_Hs->SetDirectory(dir);
  ietaTP_iphiTP_Hs->Sumw2(); ietaTP_iphiTP_Hs->SetDirectory(dir);
  ietaTP_iphiTP_Hs_2->Sumw2(); ietaTP_iphiTP_Hs_2->SetDirectory(dir);
  ietaTP_iphiTP_etTP_Hs->Sumw2(); ietaTP_iphiTP_etTP_Hs->SetDirectory(dir);
  etTP_Hs->Sumw2(); etTP_Hs->SetDirectory(dir);
  compEtTP_Hs->Sumw2(); compEtTP_Hs->SetDirectory(dir);

  ietaTP->Sumw2(); ietaTP->SetDirectory(dir);
  iphiTP->Sumw2(); iphiTP->SetDirectory(dir);
  ietaTP_iphiTP->Sumw2(); ietaTP_iphiTP->SetDirectory(dir);
  ietaTP_iphiTP_2->Sumw2(); ietaTP_iphiTP_2->SetDirectory(dir);
  ietaTP_iphiTP_etTP->Sumw2(); ietaTP_iphiTP_etTP->SetDirectory(dir);
  etTP->Sumw2(); etTP->SetDirectory(dir);
  compEtTP->Sumw2(); compEtTP->SetDirectory(dir);

  ietaTP_hf_H->Sumw2(); ietaTP_hf_H->SetDirectory(dir);
  iphiTP_hf_H->Sumw2(); iphiTP_hf_H->SetDirectory(dir);
  ietaTP_iphiTP_hf_H->Sumw2(); ietaTP_iphiTP_hf_H->SetDirectory(dir);
  ietaTP_iphiTP_hf_H_2->Sumw2(); ietaTP_iphiTP_hf_H_2->SetDirectory(dir);
  ietaTP_iphiTP_etTP_hf_H->Sumw2(); ietaTP_iphiTP_etTP_hf_H->SetDirectory(dir);
  etTP_hf_H->Sumw2(); etTP_hf_H->SetDirectory(dir);
  compEtTP_hf_H->Sumw2(); compEtTP_hf_H->SetDirectory(dir);

  ietaTP_hf_Hs->Sumw2(); ietaTP_hf_Hs->SetDirectory(dir);
  iphiTP_hf_Hs->Sumw2(); iphiTP_hf_Hs->SetDirectory(dir);
  ietaTP_iphiTP_hf_Hs->Sumw2(); ietaTP_iphiTP_hf_Hs->SetDirectory(dir);
  ietaTP_iphiTP_hf_Hs_2->Sumw2(); ietaTP_iphiTP_hf_Hs_2->SetDirectory(dir);
  ietaTP_iphiTP_etTP_hf_Hs->Sumw2(); ietaTP_iphiTP_etTP_hf_Hs->SetDirectory(dir);
  etTP_hf_Hs->Sumw2(); etTP_hf_Hs->SetDirectory(dir);
  compEtTP_hf_Hs->Sumw2(); compEtTP_hf_Hs->SetDirectory(dir);

  h_matchDR_early->Sumw2(); h_matchDR_early->SetDirectory(dir);
  h_matchDR_central->Sumw2(); h_matchDR_central->SetDirectory(dir);
  h_matchDR_early_H->Sumw2(); h_matchDR_early_H->SetDirectory(dir);
  h_matchDR_central_H->Sumw2(); h_matchDR_central_H->SetDirectory(dir);

  total->Write(); total->Close();

}

